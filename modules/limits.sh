#!/usr/bin/env bash
set -euo pipefail

set_limits() {
  ulimit -n ${LIMIT_NOFILE}

  # clamp to kernel maximum to avoid invalid settings
  local nr_open
  nr_open=$(cat /proc/sys/fs/nr_open 2>/dev/null || echo 1048576)
  if (( LIMIT_NOFILE > nr_open )); then
    warn "LIMIT_NOFILE(${LIMIT_NOFILE}) > fs.nr_open(${nr_open}); clamping to ${nr_open}"
    LIMIT_NOFILE="${nr_open}"
  fi

  # 1) PAM limits: affects new login sessions (sshd/tty)
  local lf=/etc/security/limits.d/90-nofile.conf
  cat >"$lf" <<EOF
* soft nofile ${LIMIT_NOFILE}
* hard nofile ${LIMIT_NOFILE}
root soft nofile ${LIMIT_NOFILE}
root hard nofile ${LIMIT_NOFILE}
EOF

  # 2) systemd default limits: affects systemd-managed services after restart
  #    (use a drop-in so we don't overwrite vendor file)
  local sysd_dir=/etc/systemd/system.conf.d
  mkdir -p "$sysd_dir"
  cat >"${sysd_dir}/90-nofile.conf" <<EOF
[Manager]
DefaultLimitNOFILE=${LIMIT_NOFILE}
EOF

  # apply systemd manager config without reboot
  systemctl daemon-reexec || true

  # 3) convenience for interactive shells: set soft limit on login
  #    (doesn't override PAM hard limit; new shells pick it up)
  cat >/etc/profile.d/90-nofile.sh <<EOF
# Set soft nofile for interactive shells; hard limit is defined by PAM limits.d
# This file is generated by hostkit.
if [ "\$-" != "\${-#*i}" ]; then
  # interactive shell
  ulimit -n ${LIMIT_NOFILE} 2>/dev/null || true
fi
EOF
  chmod 0644 /etc/profile.d/90-nofile.sh

  info "limits: nofile set to ${LIMIT_NOFILE} (PAM + systemd default). New logins/services will see it."
  info "limits: current shell won't change; re-login for interactive shells, restart services to apply."
}