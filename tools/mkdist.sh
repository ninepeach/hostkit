#!/usr/bin/env bash
set -euo pipefail

ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
OUT="$ROOT/dist/hostkit-deb12-init.sh"
SRC="$ROOT/scripts/deb12-init.sh"

mkdir -p "$ROOT/dist"

# ✅ Update the module list to include the new files
MODULES=(
  "log.sh"
  "detect.sh"
  "apt.sh"
  "time.sh"
  "user_sudo.sh"
  "sshd.sh"
  "unattended.sh"
  "fail2ban.sh"
  "sysctl.sh"
  "limits.sh"        
  "journald.sh"      
  "services.sh"      
  "firewall_iptables.sh"
)

{
  echo '#!/usr/bin/env bash'
  echo '# Hostkit (single-file build) — generated by tools/mkdist.sh'
  echo 'set -euo pipefail'
  echo

  # Copy the configurable variables block
  awk '
    BEGIN {copy=0}
    /^##### === Configurable variables === #####/ {print; copy=1; next}
    copy==1 {
      print
      if ($0 ~ /^#{20,}[[:space:]]*$/) { print ""; copy=0 }
      next
    }
  ' "$SRC"

  # Embed modules in order
  for m in "${MODULES[@]}"; do
    echo "# === module: $m ==="
    if [[ -f "$ROOT/modules/$m" ]]; then
      sed -e '1{/^#!.*$/d;}' \
          -e '/^[[:space:]]*set -euo pipefail[[:space:]]*$/d' \
          "$ROOT/modules/$m"
    else
      echo "echo \"[WARN] module missing: $m\" >&2"
    fi
    echo
  done

  # Append main()..end from the orchestrator, and strip any "source modules" lines
  awk '/main\(\)/,0 {print}' "$SRC" \
  | sed -E '/^[[:space:]]*\.[[:space:]]+"?\$\{?(ROOT_DIR|BASE_DIR)\}?\/modules\/[^"]+\.sh"?[[:space:]]*$/d' \
  | sed -E '/^[[:space:]]*\.[[:space:]]+.*\/modules\/[^"]+\.sh[[:space:]]*$/d'

} > "$OUT"

chmod +x "$OUT"
echo "Built: $OUT"
